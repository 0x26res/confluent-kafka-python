env:
 global:
  - LIBRDKAFKA_VERSION=v1.9.0-RC2

jobs:
 include:
  - name: "Source package verification with Python 2.7 (Linux)"
    if: false
    os: linux
    language: python
    dist: xenial
    python: "2.7"
    env: LD_LIBRARY_PATH="$PWD/tmp-build/lib"
    services: docker

  - name: "Source package verification with Python 3.6 (Linux)"
    os: linux
    language: python
    dist: xenial
    python: "3.6"
    env: LD_LIBRARY_PATH="$PWD/tmp-build/lib"
    services: docker

  - name: "Source package verification with Python 2.7 (OSX)"
    if: false
    os: osx
    python: "2.7"
    env: DYLD_LIBRARY_PATH="$PWD/tmp-build/lib" INTERPRETER_VERSION="2.7.17"

  - name: "Source package verification with Python 3.6 (OSX) +docs"
    os: osx
    python: "3.6"
    env: DYLD_LIBRARY_PATH="$PWD/tmp-build/lib" MK_DOCS="y" INTERPRETER_VERSION="3.6.5"

  - name: "Wheels: Windows x64"
    if: tag is present
    os: windows
    language: shell
    env: BUILD_WHEELS=1
    before_install:
      - choco install python --version 3.8.0
      - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
      # make sure it's on PATH as 'python3'
      - ln -s /c/Python38/python.exe /c/Python38/python3.exe
    install:
      - bash tools/wheels/install-librdkafka.sh ${LIBRDKAFKA_VERSION#v} dest
    script:
      - tools/wheels/build-wheels.bat x64 win_amd64 dest wheelhouse

  - name: "Wheels: Windows x86"
    if: tag is present
    os: windows
    language: shell
    env: BUILD_WHEELS=1
    before_install:
      - choco install python --version 3.8.0
      - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
      # make sure it's on PATH as 'python3'
      - ln -s /c/Python38/python.exe /c/Python38/python3.exe
    install:
      - bash tools/wheels/install-librdkafka.sh ${LIBRDKAFKA_VERSION#v} dest
    script:
      - tools/wheels/build-wheels.bat x86 win32 dest wheelhouse

  - name: "Wheels: Linux x64"
    if: tag is present
    language: python
    python: "3.8"
    services: docker
    env: BUILD_WHEELS=1
    script: tools/wheels/build-wheels.sh ${LIBRDKAFKA_VERSION#v} wheelhouse

  - name: "Wheels: MacOSX x64"
    if: tag is present
    os: osx
    language: shell
    env: BUILD_WHEELS=1
    script: tools/wheels/build-wheels.sh ${LIBRDKAFKA_VERSION#v} wheelhouse


# Install test dependencies unconditionally
# Travis OSX envs requires some setup; see tools/prepare-osx.sh
# Install cibuildwheel if this is a tagged PR
before_install:
  - if [[ $TRAVIS_OS_NAME == "osx" && $BUILD_WHEELS != 1 ]]; then tools/prepare-osx.sh ${INTERPRETER_VERSION} /tmp/venv && source /tmp/venv/bin/activate; fi

install:
 # Install interceptors
 - tools/install-interceptors.sh
 - if [[ $BUILD_WHEELS != 1 ]]; then pip install -r tests/requirements.txt ; fi
 - if [[ $MK_DOCS == y ]]; then pip install -r docs/requirements.txt; fi
 # Install librdkafka and confluent_kafka[avro] if not building wheels
 - if [[ $BUILD_WHEELS != 1 ]]; then pip install -U protobuf && tools/bootstrap-librdkafka.sh --require-ssl ${LIBRDKAFKA_VERSION} tmp-build ; fi



# Note: Will not be run for wheel builds.
script:
 - flake8
 # Build package
 -  pip install --global-option=build_ext --global-option="-Itmp-build/include/" --global-option="-Ltmp-build/lib" . .[avro] .[schema-registry] .[json] .[protobuf]
 - ldd staging/libs/* || otool -L staging/libs/* || true
 # Run tests
 - if [[ $TRAVIS_OS_NAME == "linux" ]]; then LD_LIBRARY_PATH=$LD_LIBRARY_PATH:staging/libs DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:staging/libs python -m pytest --timeout 600 --ignore=tmp-build || travis_terminate 1; fi
 # Build docs
 - if [[ $MK_DOCS == y ]]; then make docs; fi
 # Checksum artifacts to build log
 - sha256sum wheelhouse/* || true

deploy:
 provider: s3
 edge: true
 access_key_id:
  secure: "P6sGw8QrobLuOCSSVVWFnWYYI1DXYYgj/zcTY02/5mZAah0cDgP5fj23OEJ+2uhftOE3ZEeXUFyv5vrmT6yAVmYUuJJFDAAzjMwdddWjgRCzi9bOu3wqXo38z95KeZt7p/Pvf55jJe1dhMn+zPScVr7zED799tvcKEYx8j1eir4tRz9mpVPrO/lOfxFstsYm0zcQS/cSjkDcH7rL/ry0l2QCTgZcRa3SSCLOEZFrWO0tnVrcWopTVSKs7yf7awMstxMG1N0QP5lxDOjBihUSPlaVkxMMnFSfP6Aao/nWjvf49tArHC4UwZTRMJ8inEZehOAh2J/B1ZjZXLk+kvaQFWgk6M29jlzBtIsoidU6hMg4Oq6YvR6MoxiuFW0YllakLrjyJ6ZUZ91gJ+oSkBi+UmpiIQSMbrijTVYDrdpuGx+Cti/5vJLABR46eBpIyfYsB1sgzOEED2Gw0LNzukA+Hhojqe4fUSoLLnihsmesRA718DmiR3w1ZQ2r7N3v+yN2jjQWWn/Rxlhdn3Vww6+sQHLX2KD9aMjnIWGTWmbbmjdtxpsc8aXXQratcT7SYHMEoczoXqCfOxeUmPGWXyhqlaM57RuqwE09e8VN8soKsFcfBH/fh7XQgtUMVUobzGZWwCcCMvD0u6xqbLkqhpK8DpSx0T31Sqa1aNUUeR4HuXk="
 secret_access_key:
  secure: "pow7WTEFEPgeRz+zQ0V7i/aKPARU8vDxajjDidlGTmQiDGUdILYgNwuxdMQ5fBjyHBuaOhmojonylEmoRReO5HHDrQa1lx0ysxxsBI9uRSRJcAbCwO4PQTJ26W/CdiyWmdKZan81JEVhnIzl7Yjm23rmQT3G8culL/BcTERvE7C5uhDgqp7vP8kpdjEsJdwSRHR7j8JOHRgLaZ298UOfktLW2kb2n5h4fCauaiB07KOeQiEE3I28hHbRP1INHVI6eYj1jzyZy/4utXHFX08ore9OqOYgAv3A7tClfoIwQJiknwrZn8mSdjH9mr2NyUnCYX03MkYGEOar8OPUzJR7l2O9zFsW4w8FYvz2z42+qTYmvLyvs7BhLC0GCQI28m1/E7xcmVJ2KrP3m/9d+9Puf5E2ueW/DgSZsvGLDzVzRpsUCaO6R2zrgAk43aoKri+egwlMUDvGrdNw6Dmg/vaNqwANMo8xruh5ifN2S1a2ri6fD4gPvdDHnqanvwcSFlLWBipKQnxxBsMeSK71eK37VkJTCxq4+koMvrkneG/F3+gp8eo41HsbMCA4iHF6Fd90S7SWJhDDCxceGw/CpEIIeVIdjgsc22UCzSUx/6+QsvUOau1ra45Il8oTqrDC4y0ZfGyUURLawzPRpG3zGiXNXOAhIPWNB+L4YQFVqlFCX7o="
 bucket: librdkafka-ci-packages
 region: us-west-1
 local-dir: wheelhouse
 upload_dir: confluent-kafka-python/p-confluent-kafka-python__bld-travis__plat-${TRAVIS_OS_NAME}__tag-${TRAVIS_TAG}__sha-${TRAVIS_COMMIT}__bid-${TRAVIS_BUILD_ID}__
 acl: public_read
 cleanup: false
 on:
  repo: confluentinc/confluent-kafka-python
  tags: true
  condition: "$BUILD_WHEELS == 1"
